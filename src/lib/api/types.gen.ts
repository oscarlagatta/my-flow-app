// This file is auto-generated by @hey-api/openapi-ts

/**
 * Account
 */
export type Account = {
    /**
     * MongoDB document ObjectID
     */
    _id?: PydanticObjectId | null;
    /**
     * Name
     */
    name: string;
    /**
     * Status
     */
    status?: string;
    /**
     * Created At
     */
    created_at?: string;
    /**
     * Updated At
     */
    updated_at?: string;
};

/**
 * AccountUpdate
 */
export type AccountUpdate = {
    /**
     * Name
     */
    name?: string | null;
    /**
     * Status
     */
    status?: string | null;
};

/**
 * Carrier
 */
export type Carrier = {
    /**
     * MongoDB document ObjectID
     */
    _id?: PydanticObjectId | null;
    /**
     * Name
     */
    name: string;
    /**
     * Display Name
     */
    display_name: string;
    /**
     * Call Direction
     */
    call_direction: 'INBOUND' | 'OUTBOUND' | 'BOTH';
    /**
     * Technology
     */
    technology: 'IP' | 'ISDN' | 'Mobile';
    /**
     * Type
     */
    type: Array<'SIP' | 'E1' | 'GSM' | 'TDM' | 'VoLTE'>;
    /**
     * Country
     * ISO 3166-1 alpha-2 country code, e.g., 'US'
     */
    country: string;
    /**
     * Country Name
     */
    country_name?: string | null;
    /**
     * Supports International
     */
    supports_international?: boolean;
    /**
     * Supports In Country
     */
    supports_in_country?: boolean;
    /**
     * Priority
     * Higher means more preferred
     */
    priority?: number;
    /**
     * Notes
     */
    notes?: string | null;
    /**
     * Enabled
     */
    enabled?: boolean;
    /**
     * Technology-specific optional fields such as MCC/MNC for Mobile carriers
     */
    details?: CarrierDetails | null;
    /**
     * Created At
     */
    created_at?: string;
    /**
     * Updated At
     */
    updated_at?: string;
};

/**
 * CarrierCreate
 */
export type CarrierCreate = {
    /**
     * Name
     */
    name: string;
    /**
     * Display Name
     */
    display_name: string;
    /**
     * Call Direction
     */
    call_direction: 'INBOUND' | 'OUTBOUND' | 'BOTH';
    /**
     * Technology
     */
    technology: 'IP' | 'ISDN' | 'Mobile';
    /**
     * Type
     */
    type: Array<'SIP' | 'E1' | 'GSM' | 'TDM' | 'VoLTE'>;
    /**
     * Country
     * ISO 3166-1 alpha-2 country code, e.g., 'US'
     */
    country: string;
    /**
     * Country Name
     */
    country_name?: string | null;
    /**
     * Supports International
     */
    supports_international?: boolean;
    /**
     * Supports In Country
     */
    supports_in_country?: boolean;
    /**
     * Priority
     * Higher means more preferred
     */
    priority?: number;
    /**
     * Notes
     */
    notes?: string | null;
    /**
     * Enabled
     */
    enabled?: boolean;
    details?: CarrierDetails | null;
};

/**
 * CarrierDetails
 */
export type CarrierDetails = {
    /**
     * Mcc
     */
    mcc?: string | null;
    /**
     * Mnc
     */
    mnc?: string | null;
    /**
     * Imsi
     */
    imsi?: string | null;
    /**
     * Number Of Channels
     */
    number_of_channels?: number | null;
    /**
     * Cli
     */
    cli?: string | null;
    /**
     * E164 Cli
     */
    e164_cli?: string | null;
    /**
     * Number Start
     */
    number_start?: string | null;
    /**
     * Number End
     */
    number_end?: string | null;
    /**
     * Support Multiple Cli
     */
    support_multiple_cli?: boolean | null;
};

/**
 * CarrierUpdate
 */
export type CarrierUpdate = {
    /**
     * Name
     */
    name?: string | null;
    /**
     * Display Name
     */
    display_name?: string | null;
    /**
     * Call Direction
     */
    call_direction?: ('INBOUND' | 'OUTBOUND' | 'BOTH') | null;
    /**
     * Technology
     */
    technology?: ('IP' | 'ISDN' | 'Mobile') | null;
    /**
     * Type
     */
    type?: Array<'SIP' | 'E1' | 'GSM' | 'TDM' | 'VoLTE'> | null;
    /**
     * Country
     */
    country?: string | null;
    /**
     * Country Name
     */
    country_name?: string | null;
    /**
     * Supports International
     */
    supports_international?: boolean | null;
    /**
     * Supports In Country
     */
    supports_in_country?: boolean | null;
    /**
     * Priority
     */
    priority?: number | null;
    /**
     * Notes
     */
    notes?: string | null;
    /**
     * Enabled
     */
    enabled?: boolean | null;
    details?: CarrierDetails | null;
};

/**
 * Country
 */
export type Country = {
    /**
     * MongoDB document ObjectID
     */
    _id?: PydanticObjectId | null;
    /**
     * Country Id
     */
    country_id?: number | null;
    /**
     * Name
     */
    name: string;
    /**
     * Iso3
     */
    iso3: string;
    /**
     * Iso2
     */
    iso2: string;
    /**
     * Numeric Code
     */
    numeric_code?: string | null;
    /**
     * Phonecode
     */
    phonecode?: string | null;
    /**
     * Capital
     */
    capital?: string | null;
    /**
     * Currency
     */
    currency?: string | null;
    /**
     * Currency Name
     */
    currency_name?: string | null;
    /**
     * Currency Symbol
     */
    currency_symbol?: string | null;
    /**
     * Tld
     */
    tld?: string | null;
    /**
     * Native
     */
    native?: string | null;
    /**
     * Region
     */
    region?: string | null;
    /**
     * Region Id
     */
    region_id?: number | null;
    /**
     * Subregion
     */
    subregion?: string | null;
    /**
     * Subregion Id
     */
    subregion_id?: number | null;
    /**
     * Nationality
     */
    nationality?: string | null;
    /**
     * Timezones
     */
    timezones?: Array<Timezone>;
    /**
     * Translations
     */
    translations?: {
        [key: string]: string;
    };
    /**
     * Latitude
     */
    latitude?: string | null;
    /**
     * Longitude
     */
    longitude?: string | null;
    /**
     * Emoji
     */
    emoji?: string | null;
    /**
     * Emojiu
     */
    emojiU?: string | null;
    /**
     * Created At
     */
    created_at?: string;
    /**
     * Updated At
     */
    updated_at?: string;
};

/**
 * CronConfig
 */
export type CronConfig = {
    /**
     * Minute
     */
    minute: string;
    /**
     * Hour
     */
    hour: string;
    /**
     * Day
     */
    day: string;
    /**
     * Month
     */
    month: string;
    /**
     * Day Of Week
     */
    day_of_week: string;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * LoginRequest
 */
export type LoginRequest = {
    /**
     * Email
     */
    email: string;
    /**
     * Password
     */
    password: string;
};

/**
 * LoginResponse
 */
export type LoginResponse = {
    /**
     * Access Token
     */
    access_token: string;
    /**
     * Refresh Token
     */
    refresh_token: string;
    /**
     * Token Type
     */
    token_type?: string;
    /**
     * Expires In
     */
    expires_in: number;
};

/**
 * LogoutRequest
 */
export type LogoutRequest = {
    /**
     * Refresh Token
     */
    refresh_token: string;
};

/**
 * Number
 */
export type Number = {
    /**
     * MongoDB document ObjectID
     */
    _id?: PydanticObjectId | null;
    /**
     * Type
     */
    type: 'number' | 'sip' | 'web';
    /**
     * Subtype
     */
    subtype?: ('toll' | 'toll_free' | 'mobile' | 'itfs' | 'fax' | 'sms' | 'http' | 'https' | 'voip') | null;
    /**
     * Value
     */
    value: string;
    /**
     * Protocols
     */
    protocols?: Array<'audio' | 'video' | 'fax' | 'sms' | 'dtmf' | 'http'>;
    /**
     * Country
     * ISO 3166 alpha-2 country code, e.g., 'US'
     */
    country?: string | null;
    /**
     * Country Name
     */
    country_name?: string | null;
    /**
     * Operator
     */
    operator?: string | null;
    /**
     * Region
     */
    region?: string | null;
    /**
     * Timezone
     */
    timezone?: string | null;
    /**
     * Tags
     */
    tags?: Array<string>;
    /**
     * Enabled
     */
    enabled?: boolean;
    /**
     * Priority
     * Higher means more priority
     */
    priority?: number;
    /**
     * Notes
     */
    notes?: string | null;
    /**
     * Account Id
     */
    account_id: string;
    /**
     * Created At
     */
    created_at?: string;
    /**
     * Updated At
     */
    updated_at?: string;
};

/**
 * NumberCreate
 */
export type NumberCreate = {
    /**
     * Type
     */
    type: 'number' | 'sip' | 'web';
    /**
     * Subtype
     */
    subtype?: ('toll' | 'toll_free' | 'mobile' | 'itfs' | 'fax' | 'sms' | 'http' | 'https' | 'voip') | null;
    /**
     * Value
     */
    value: string;
    /**
     * Protocols
     */
    protocols?: Array<'audio' | 'video' | 'fax' | 'sms' | 'dtmf' | 'http'>;
    /**
     * Country
     */
    country?: string | null;
    /**
     * Country Name
     */
    country_name?: string | null;
    /**
     * Operator
     */
    operator?: string | null;
    /**
     * Region
     */
    region?: string | null;
    /**
     * Timezone
     */
    timezone?: string | null;
    /**
     * Tags
     */
    tags?: Array<string>;
    /**
     * Enabled
     */
    enabled?: boolean;
    /**
     * Priority
     * Higher means more priority
     */
    priority?: number;
    /**
     * Notes
     */
    notes?: string | null;
    /**
     * Account Id
     */
    account_id: string;
};

/**
 * NumberUpdate
 */
export type NumberUpdate = {
    /**
     * Type
     */
    type?: ('number' | 'sip' | 'web') | null;
    /**
     * Subtype
     */
    subtype?: ('toll' | 'toll_free' | 'mobile' | 'itfs' | 'fax' | 'sms' | 'http' | 'https' | 'voip') | null;
    /**
     * Value
     */
    value?: string | null;
    /**
     * Protocols
     */
    protocols?: Array<'audio' | 'video' | 'fax' | 'sms' | 'dtmf' | 'http'> | null;
    /**
     * Country
     */
    country?: string | null;
    /**
     * Country Name
     */
    country_name?: string | null;
    /**
     * Operator
     */
    operator?: string | null;
    /**
     * Region
     */
    region?: string | null;
    /**
     * Timezone
     */
    timezone?: string | null;
    /**
     * Tags
     */
    tags?: Array<string> | null;
    /**
     * Enabled
     */
    enabled?: boolean | null;
    /**
     * Priority
     */
    priority?: number | null;
    /**
     * Notes
     */
    notes?: string | null;
};

/**
 * Payload
 */
export type Payload = {
    /**
     * Number Ids
     */
    number_ids: string;
    /**
     * Scenario
     */
    scenario: string;
};

export type PydanticObjectId = string;

/**
 * RefreshRequest
 */
export type RefreshRequest = {
    /**
     * Refresh Token
     */
    refresh_token: string;
};

/**
 * RefreshResponse
 */
export type RefreshResponse = {
    /**
     * Access Token
     */
    access_token: string;
    /**
     * Token Type
     */
    token_type?: string;
    /**
     * Expires In
     */
    expires_in: number;
};

/**
 * Role
 */
export type Role = {
    /**
     * MongoDB document ObjectID
     */
    _id?: PydanticObjectId | null;
    /**
     * Name
     */
    name: string;
    /**
     * Permissions
     */
    permissions?: Array<string>;
    /**
     * Created At
     */
    created_at?: string;
    /**
     * Updated At
     */
    updated_at?: string;
};

/**
 * RoleCreate
 */
export type RoleCreate = {
    /**
     * Name
     */
    name: string;
    /**
     * Permissions
     */
    permissions?: Array<string>;
};

/**
 * RoleUpdate
 */
export type RoleUpdate = {
    /**
     * Name
     */
    name?: string | null;
    /**
     * Permissions
     */
    permissions?: Array<string> | null;
};

/**
 * Scheduler
 */
export type Scheduler = {
    /**
     * MongoDB document ObjectID
     */
    _id?: PydanticObjectId | null;
    /**
     * Name
     */
    name: string;
    /**
     * Status
     */
    status?: string;
    cron: CronConfig;
    /**
     * Timezone
     */
    timezone: string;
    /**
     * Gmt Offset
     */
    gmt_offset: string;
    /**
     * Start Date
     */
    start_date: string;
    /**
     * End Date
     */
    end_date?: string | null;
    payload: Payload;
    /**
     * Last Run
     */
    last_run?: string | null;
    /**
     * Next Run
     */
    next_run?: string | null;
    /**
     * Shard Key
     */
    shard_key?: number | null;
    /**
     * Created By
     */
    created_by: string;
    /**
     * Updated By
     */
    updated_by: string;
    /**
     * Account Id
     */
    account_id: string;
    /**
     * Stats
     */
    stats?: {
        [key: string]: unknown;
    } | null;
    /**
     * Created At
     */
    created_at?: string;
    /**
     * Updated At
     */
    updated_at?: string;
};

/**
 * SchedulerCreate
 */
export type SchedulerCreate = {
    /**
     * Name
     */
    name: string;
    /**
     * Status
     */
    status?: string;
    cron: CronConfig;
    /**
     * Timezone
     */
    timezone: string;
    /**
     * Gmt Offset
     */
    gmt_offset: string;
    /**
     * Start Date
     */
    start_date: string;
    /**
     * End Date
     */
    end_date?: string | null;
    payload: Payload;
    /**
     * Created By
     */
    created_by: string;
    /**
     * Account Id
     */
    account_id: string;
    /**
     * Stats
     */
    stats?: {
        [key: string]: unknown;
    } | null;
};

/**
 * SchedulerUpdate
 */
export type SchedulerUpdate = {
    /**
     * Name
     */
    name?: string | null;
    /**
     * Status
     */
    status?: string | null;
    cron?: CronConfig | null;
    /**
     * Timezone
     */
    timezone?: string | null;
    /**
     * Gmt Offset
     */
    gmt_offset?: string | null;
    /**
     * Start Date
     */
    start_date?: string | null;
    /**
     * End Date
     */
    end_date?: string | null;
    payload?: Payload | null;
    /**
     * Last Run
     */
    last_run?: string | null;
    /**
     * Next Run
     */
    next_run?: string | null;
    /**
     * Shard Key
     */
    shard_key?: number | null;
    /**
     * Updated By
     */
    updated_by?: string | null;
    /**
     * Stats
     */
    stats?: {
        [key: string]: unknown;
    } | null;
};

/**
 * Server
 */
export type Server = {
    /**
     * MongoDB document ObjectID
     */
    _id?: PydanticObjectId | null;
    /**
     * Name
     */
    name: string;
    /**
     * Type
     */
    type: Array<'CALL' | 'WEB' | 'STUN/TURN' | 'APPLICATION' | 'OTHER'>;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Hostname
     */
    hostname: string;
    /**
     * Ip Addresses
     */
    ip_addresses: Array<string>;
    /**
     * Location
     */
    location?: string | null;
    /**
     * Region
     */
    region?: string | null;
    /**
     * Country
     * ISO 3166 alpha-2 country code, e.g., 'US'
     */
    country?: string | null;
    /**
     * Country Name
     */
    country_name?: string | null;
    /**
     * Tags
     */
    tags?: Array<string>;
    /**
     * Enabled
     */
    enabled?: boolean;
    /**
     * Healthy
     */
    healthy?: boolean;
    /**
     * Priority
     * Higher means more preferred
     */
    priority?: number;
    /**
     * Notes
     */
    notes?: string | null;
    /**
     * Technology-specific optional fields
     */
    details?: ServerDetails | null;
    /**
     * Created At
     */
    created_at?: string;
    /**
     * Updated At
     */
    updated_at?: string;
};

/**
 * ServerCreate
 */
export type ServerCreate = {
    /**
     * Name
     */
    name: string;
    /**
     * Type
     */
    type: Array<'CALL' | 'WEB' | 'STUN/TURN' | 'APPLICATION' | 'OTHER'>;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Hostname
     */
    hostname: string;
    /**
     * Ip Addresses
     */
    ip_addresses: Array<string>;
    /**
     * Location
     */
    location?: string | null;
    /**
     * Region
     */
    region?: string | null;
    /**
     * Country
     * ISO 3166 alpha-2 country code, e.g., 'US'
     */
    country?: string | null;
    /**
     * Country Name
     */
    country_name?: string | null;
    /**
     * Tags
     */
    tags?: Array<string>;
    /**
     * Enabled
     */
    enabled?: boolean;
    /**
     * Healthy
     */
    healthy?: boolean;
    /**
     * Priority
     * Higher means more preferred
     */
    priority?: number;
    /**
     * Notes
     */
    notes?: string | null;
    details?: ServerDetails | null;
};

/**
 * ServerDetails
 */
export type ServerDetails = {
    /**
     * Technology
     */
    technology: Array<'MOBILE' | 'FIXED' | 'APPLICATION' | 'OTHER'>;
    /**
     * Hosted On
     */
    hosted_on: Array<'AWS' | 'GCP' | 'ON-PREM' | 'CLOUD' | 'OTHER'>;
    /**
     * Hosted Partner Name
     */
    hosted_partner_name?: string | null;
    /**
     * Hosted Partner Id
     */
    hosted_partner_id?: string | null;
    /**
     * Disk Space
     */
    disk_space?: string | null;
    /**
     * City
     */
    city?: string | null;
    /**
     * Area
     */
    area?: string | null;
};

/**
 * ServerUpdate
 */
export type ServerUpdate = {
    /**
     * Name
     */
    name?: string | null;
    /**
     * Type
     */
    type?: Array<'CALL' | 'WEB' | 'STUN/TURN' | 'APPLICATION' | 'OTHER'> | null;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Hostname
     */
    hostname?: string | null;
    /**
     * Ip Addresses
     */
    ip_addresses?: Array<string> | null;
    /**
     * Location
     */
    location?: string | null;
    /**
     * Region
     */
    region?: string | null;
    /**
     * Country
     */
    country?: string | null;
    /**
     * Country Name
     */
    country_name?: string | null;
    /**
     * Tags
     */
    tags?: Array<string> | null;
    /**
     * Enabled
     */
    enabled?: boolean | null;
    /**
     * Healthy
     */
    healthy?: boolean | null;
    /**
     * Priority
     */
    priority?: number | null;
    /**
     * Notes
     */
    notes?: string | null;
    details?: ServerDetails | null;
};

/**
 * Service
 */
export type Service = {
    /**
     * MongoDB document ObjectID
     */
    _id?: PydanticObjectId | null;
    /**
     * Name
     */
    name: string;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Is Active
     */
    is_active?: boolean;
    /**
     * Created At
     */
    created_at?: string;
    /**
     * Updated At
     */
    updated_at?: string;
};

/**
 * ServiceCreate
 */
export type ServiceCreate = {
    /**
     * Name
     */
    name: string;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Is Active
     */
    is_active?: boolean;
};

/**
 * ServiceUpdate
 */
export type ServiceUpdate = {
    /**
     * Name
     */
    name?: string | null;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Is Active
     */
    is_active?: boolean | null;
};

/**
 * Timezone
 */
export type Timezone = {
    /**
     * Zonename
     */
    zoneName: string;
    /**
     * Gmtoffset
     */
    gmtOffset: number;
    /**
     * Gmtoffsetname
     */
    gmtOffsetName: string;
    /**
     * Abbreviation
     */
    abbreviation: string;
    /**
     * Tzname
     */
    tzName: string;
};

/**
 * User
 */
export type User = {
    /**
     * MongoDB document ObjectID
     */
    _id?: PydanticObjectId | null;
    /**
     * Name
     */
    name: string;
    /**
     * Email
     */
    email: string;
    /**
     * Password
     */
    password: string;
    /**
     * Account Id
     */
    account_id: string;
    /**
     * Role Id
     */
    role_id: string;
    /**
     * Created At
     */
    created_at?: string;
    /**
     * Updated At
     */
    updated_at?: string;
    /**
     * Active
     */
    active?: boolean;
};

/**
 * UserUpdate
 */
export type UserUpdate = {
    /**
     * Name
     */
    name?: string | null;
    /**
     * Password
     */
    password?: string | null;
    /**
     * Role Id
     */
    role_id?: string | null;
    /**
     * Active
     */
    active?: boolean | null;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

export type LoginApiV1AuthLoginPostData = {
    body: LoginRequest;
    path?: never;
    query?: never;
    url: '/api/v1/auth/login';
};

export type LoginApiV1AuthLoginPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoginApiV1AuthLoginPostError = LoginApiV1AuthLoginPostErrors[keyof LoginApiV1AuthLoginPostErrors];

export type LoginApiV1AuthLoginPostResponses = {
    /**
     * Successful Response
     */
    200: LoginResponse;
};

export type LoginApiV1AuthLoginPostResponse = LoginApiV1AuthLoginPostResponses[keyof LoginApiV1AuthLoginPostResponses];

export type RefreshTokenApiV1AuthRefreshPostData = {
    body: RefreshRequest;
    path?: never;
    query?: never;
    url: '/api/v1/auth/refresh';
};

export type RefreshTokenApiV1AuthRefreshPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RefreshTokenApiV1AuthRefreshPostError = RefreshTokenApiV1AuthRefreshPostErrors[keyof RefreshTokenApiV1AuthRefreshPostErrors];

export type RefreshTokenApiV1AuthRefreshPostResponses = {
    /**
     * Successful Response
     */
    200: RefreshResponse;
};

export type RefreshTokenApiV1AuthRefreshPostResponse = RefreshTokenApiV1AuthRefreshPostResponses[keyof RefreshTokenApiV1AuthRefreshPostResponses];

export type LogoutApiV1AuthLogoutPostData = {
    body: LogoutRequest;
    path?: never;
    query?: never;
    url: '/api/v1/auth/logout';
};

export type LogoutApiV1AuthLogoutPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LogoutApiV1AuthLogoutPostError = LogoutApiV1AuthLogoutPostErrors[keyof LogoutApiV1AuthLogoutPostErrors];

export type LogoutApiV1AuthLogoutPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetAllCountriesApiV1CountriesGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/countries/';
};

export type GetAllCountriesApiV1CountriesGetResponses = {
    /**
     * Response Get All Countries Api V1 Countries  Get
     * Successful Response
     */
    200: Array<Country>;
};

export type GetAllCountriesApiV1CountriesGetResponse = GetAllCountriesApiV1CountriesGetResponses[keyof GetAllCountriesApiV1CountriesGetResponses];

export type GetCountryByNameApiV1CountriesNameGetData = {
    body?: never;
    path: {
        /**
         * Name
         */
        name: string;
    };
    query?: never;
    url: '/api/v1/countries/{name}';
};

export type GetCountryByNameApiV1CountriesNameGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetCountryByNameApiV1CountriesNameGetError = GetCountryByNameApiV1CountriesNameGetErrors[keyof GetCountryByNameApiV1CountriesNameGetErrors];

export type GetCountryByNameApiV1CountriesNameGetResponses = {
    /**
     * Successful Response
     */
    200: Country;
};

export type GetCountryByNameApiV1CountriesNameGetResponse = GetCountryByNameApiV1CountriesNameGetResponses[keyof GetCountryByNameApiV1CountriesNameGetResponses];

export type GetCountryByIso2ApiV1CountriesIso2Iso2GetData = {
    body?: never;
    path: {
        /**
         * Iso2
         */
        iso2: string;
    };
    query?: never;
    url: '/api/v1/countries/iso2/{iso2}';
};

export type GetCountryByIso2ApiV1CountriesIso2Iso2GetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetCountryByIso2ApiV1CountriesIso2Iso2GetError = GetCountryByIso2ApiV1CountriesIso2Iso2GetErrors[keyof GetCountryByIso2ApiV1CountriesIso2Iso2GetErrors];

export type GetCountryByIso2ApiV1CountriesIso2Iso2GetResponses = {
    /**
     * Successful Response
     */
    200: Country;
};

export type GetCountryByIso2ApiV1CountriesIso2Iso2GetResponse = GetCountryByIso2ApiV1CountriesIso2Iso2GetResponses[keyof GetCountryByIso2ApiV1CountriesIso2Iso2GetResponses];

export type GetCountryByPhoneCodeApiV1CountriesPhonecodePhoneCodeGetData = {
    body?: never;
    path: {
        /**
         * Phone Code
         */
        phone_code: string;
    };
    query?: never;
    url: '/api/v1/countries/phonecode/{phone_code}';
};

export type GetCountryByPhoneCodeApiV1CountriesPhonecodePhoneCodeGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetCountryByPhoneCodeApiV1CountriesPhonecodePhoneCodeGetError = GetCountryByPhoneCodeApiV1CountriesPhonecodePhoneCodeGetErrors[keyof GetCountryByPhoneCodeApiV1CountriesPhonecodePhoneCodeGetErrors];

export type GetCountryByPhoneCodeApiV1CountriesPhonecodePhoneCodeGetResponses = {
    /**
     * Successful Response
     */
    200: Country;
};

export type GetCountryByPhoneCodeApiV1CountriesPhonecodePhoneCodeGetResponse = GetCountryByPhoneCodeApiV1CountriesPhonecodePhoneCodeGetResponses[keyof GetCountryByPhoneCodeApiV1CountriesPhonecodePhoneCodeGetResponses];

export type GetAllServicesApiV1ServicesGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/services/';
};

export type GetAllServicesApiV1ServicesGetResponses = {
    /**
     * Response Get All Services Api V1 Services  Get
     * Successful Response
     */
    200: Array<Service>;
};

export type GetAllServicesApiV1ServicesGetResponse = GetAllServicesApiV1ServicesGetResponses[keyof GetAllServicesApiV1ServicesGetResponses];

export type CreateServiceApiV1ServicesPostData = {
    body: ServiceCreate;
    path?: never;
    query?: never;
    url: '/api/v1/services/';
};

export type CreateServiceApiV1ServicesPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateServiceApiV1ServicesPostError = CreateServiceApiV1ServicesPostErrors[keyof CreateServiceApiV1ServicesPostErrors];

export type CreateServiceApiV1ServicesPostResponses = {
    /**
     * Response Create Service Api V1 Services  Post
     * Successful Response
     */
    200: string;
};

export type CreateServiceApiV1ServicesPostResponse = CreateServiceApiV1ServicesPostResponses[keyof CreateServiceApiV1ServicesPostResponses];

export type DeleteServiceApiV1ServicesServiceIdDeleteData = {
    body?: never;
    path: {
        /**
         * Service Id
         */
        service_id: string;
    };
    query?: never;
    url: '/api/v1/services/{service_id}';
};

export type DeleteServiceApiV1ServicesServiceIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteServiceApiV1ServicesServiceIdDeleteError = DeleteServiceApiV1ServicesServiceIdDeleteErrors[keyof DeleteServiceApiV1ServicesServiceIdDeleteErrors];

export type DeleteServiceApiV1ServicesServiceIdDeleteResponses = {
    /**
     * Response Delete Service Api V1 Services  Service Id  Delete
     * Successful Response
     */
    200: boolean;
};

export type DeleteServiceApiV1ServicesServiceIdDeleteResponse = DeleteServiceApiV1ServicesServiceIdDeleteResponses[keyof DeleteServiceApiV1ServicesServiceIdDeleteResponses];

export type GetServiceByIdApiV1ServicesServiceIdGetData = {
    body?: never;
    path: {
        /**
         * Service Id
         */
        service_id: string;
    };
    query?: never;
    url: '/api/v1/services/{service_id}';
};

export type GetServiceByIdApiV1ServicesServiceIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetServiceByIdApiV1ServicesServiceIdGetError = GetServiceByIdApiV1ServicesServiceIdGetErrors[keyof GetServiceByIdApiV1ServicesServiceIdGetErrors];

export type GetServiceByIdApiV1ServicesServiceIdGetResponses = {
    /**
     * Successful Response
     */
    200: Service;
};

export type GetServiceByIdApiV1ServicesServiceIdGetResponse = GetServiceByIdApiV1ServicesServiceIdGetResponses[keyof GetServiceByIdApiV1ServicesServiceIdGetResponses];

export type UpdateServiceApiV1ServicesServiceIdPutData = {
    body: ServiceUpdate;
    path: {
        /**
         * Service Id
         */
        service_id: string;
    };
    query?: never;
    url: '/api/v1/services/{service_id}';
};

export type UpdateServiceApiV1ServicesServiceIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateServiceApiV1ServicesServiceIdPutError = UpdateServiceApiV1ServicesServiceIdPutErrors[keyof UpdateServiceApiV1ServicesServiceIdPutErrors];

export type UpdateServiceApiV1ServicesServiceIdPutResponses = {
    /**
     * Response Update Service Api V1 Services  Service Id  Put
     * Successful Response
     */
    200: boolean;
};

export type UpdateServiceApiV1ServicesServiceIdPutResponse = UpdateServiceApiV1ServicesServiceIdPutResponses[keyof UpdateServiceApiV1ServicesServiceIdPutResponses];

export type GetAllRolesApiV1RolesGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/roles/';
};

export type GetAllRolesApiV1RolesGetResponses = {
    /**
     * Response Get All Roles Api V1 Roles  Get
     * Successful Response
     */
    200: Array<Role>;
};

export type GetAllRolesApiV1RolesGetResponse = GetAllRolesApiV1RolesGetResponses[keyof GetAllRolesApiV1RolesGetResponses];

export type CreateRoleApiV1RolesPostData = {
    body: RoleCreate;
    path?: never;
    query?: never;
    url: '/api/v1/roles/';
};

export type CreateRoleApiV1RolesPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateRoleApiV1RolesPostError = CreateRoleApiV1RolesPostErrors[keyof CreateRoleApiV1RolesPostErrors];

export type CreateRoleApiV1RolesPostResponses = {
    /**
     * Response Create Role Api V1 Roles  Post
     * Successful Response
     */
    200: string;
};

export type CreateRoleApiV1RolesPostResponse = CreateRoleApiV1RolesPostResponses[keyof CreateRoleApiV1RolesPostResponses];

export type DeleteRoleApiV1RolesRoleIdDeleteData = {
    body?: never;
    path: {
        /**
         * Role Id
         */
        role_id: string;
    };
    query?: never;
    url: '/api/v1/roles/{role_id}';
};

export type DeleteRoleApiV1RolesRoleIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteRoleApiV1RolesRoleIdDeleteError = DeleteRoleApiV1RolesRoleIdDeleteErrors[keyof DeleteRoleApiV1RolesRoleIdDeleteErrors];

export type DeleteRoleApiV1RolesRoleIdDeleteResponses = {
    /**
     * Response Delete Role Api V1 Roles  Role Id  Delete
     * Successful Response
     */
    200: boolean;
};

export type DeleteRoleApiV1RolesRoleIdDeleteResponse = DeleteRoleApiV1RolesRoleIdDeleteResponses[keyof DeleteRoleApiV1RolesRoleIdDeleteResponses];

export type GetRoleByIdApiV1RolesRoleIdGetData = {
    body?: never;
    path: {
        /**
         * Role Id
         */
        role_id: string;
    };
    query?: never;
    url: '/api/v1/roles/{role_id}';
};

export type GetRoleByIdApiV1RolesRoleIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetRoleByIdApiV1RolesRoleIdGetError = GetRoleByIdApiV1RolesRoleIdGetErrors[keyof GetRoleByIdApiV1RolesRoleIdGetErrors];

export type GetRoleByIdApiV1RolesRoleIdGetResponses = {
    /**
     * Successful Response
     */
    200: Role;
};

export type GetRoleByIdApiV1RolesRoleIdGetResponse = GetRoleByIdApiV1RolesRoleIdGetResponses[keyof GetRoleByIdApiV1RolesRoleIdGetResponses];

export type UpdateRoleApiV1RolesRoleIdPutData = {
    body: RoleUpdate;
    path: {
        /**
         * Role Id
         */
        role_id: string;
    };
    query?: never;
    url: '/api/v1/roles/{role_id}';
};

export type UpdateRoleApiV1RolesRoleIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateRoleApiV1RolesRoleIdPutError = UpdateRoleApiV1RolesRoleIdPutErrors[keyof UpdateRoleApiV1RolesRoleIdPutErrors];

export type UpdateRoleApiV1RolesRoleIdPutResponses = {
    /**
     * Response Update Role Api V1 Roles  Role Id  Put
     * Successful Response
     */
    200: boolean;
};

export type UpdateRoleApiV1RolesRoleIdPutResponse = UpdateRoleApiV1RolesRoleIdPutResponses[keyof UpdateRoleApiV1RolesRoleIdPutResponses];

export type GetRoleByNameApiV1RolesNameRoleNameGetData = {
    body?: never;
    path: {
        /**
         * Role Name
         */
        role_name: string;
    };
    query?: never;
    url: '/api/v1/roles/name/{role_name}';
};

export type GetRoleByNameApiV1RolesNameRoleNameGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetRoleByNameApiV1RolesNameRoleNameGetError = GetRoleByNameApiV1RolesNameRoleNameGetErrors[keyof GetRoleByNameApiV1RolesNameRoleNameGetErrors];

export type GetRoleByNameApiV1RolesNameRoleNameGetResponses = {
    /**
     * Successful Response
     */
    200: Role;
};

export type GetRoleByNameApiV1RolesNameRoleNameGetResponse = GetRoleByNameApiV1RolesNameRoleNameGetResponses[keyof GetRoleByNameApiV1RolesNameRoleNameGetResponses];

export type GetAllAccountsApiV1AccountsGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Skip
         */
        skip?: number;
        /**
         * Limit
         */
        limit?: number;
    };
    url: '/api/v1/accounts/';
};

export type GetAllAccountsApiV1AccountsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllAccountsApiV1AccountsGetError = GetAllAccountsApiV1AccountsGetErrors[keyof GetAllAccountsApiV1AccountsGetErrors];

export type GetAllAccountsApiV1AccountsGetResponses = {
    /**
     * Response Get All Accounts Api V1 Accounts  Get
     * Successful Response
     */
    200: Array<Account>;
};

export type GetAllAccountsApiV1AccountsGetResponse = GetAllAccountsApiV1AccountsGetResponses[keyof GetAllAccountsApiV1AccountsGetResponses];

export type CreateAccountApiV1AccountsPostData = {
    /**
     * Account Data
     */
    body: {
        [key: string]: unknown;
    };
    path?: never;
    query?: never;
    url: '/api/v1/accounts/';
};

export type CreateAccountApiV1AccountsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateAccountApiV1AccountsPostError = CreateAccountApiV1AccountsPostErrors[keyof CreateAccountApiV1AccountsPostErrors];

export type CreateAccountApiV1AccountsPostResponses = {
    /**
     * Response Create Account Api V1 Accounts  Post
     * Successful Response
     */
    201: {
        [key: string]: unknown;
    };
};

export type CreateAccountApiV1AccountsPostResponse = CreateAccountApiV1AccountsPostResponses[keyof CreateAccountApiV1AccountsPostResponses];

export type DeleteAccountApiV1AccountsAccountIdDeleteData = {
    body?: never;
    path: {
        /**
         * Account Id
         */
        account_id: string;
    };
    query?: never;
    url: '/api/v1/accounts/{account_id}';
};

export type DeleteAccountApiV1AccountsAccountIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteAccountApiV1AccountsAccountIdDeleteError = DeleteAccountApiV1AccountsAccountIdDeleteErrors[keyof DeleteAccountApiV1AccountsAccountIdDeleteErrors];

export type DeleteAccountApiV1AccountsAccountIdDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type DeleteAccountApiV1AccountsAccountIdDeleteResponse = DeleteAccountApiV1AccountsAccountIdDeleteResponses[keyof DeleteAccountApiV1AccountsAccountIdDeleteResponses];

export type GetAccountApiV1AccountsAccountIdGetData = {
    body?: never;
    path: {
        /**
         * Account Id
         */
        account_id: string;
    };
    query?: never;
    url: '/api/v1/accounts/{account_id}';
};

export type GetAccountApiV1AccountsAccountIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAccountApiV1AccountsAccountIdGetError = GetAccountApiV1AccountsAccountIdGetErrors[keyof GetAccountApiV1AccountsAccountIdGetErrors];

export type GetAccountApiV1AccountsAccountIdGetResponses = {
    /**
     * Successful Response
     */
    200: Account;
};

export type GetAccountApiV1AccountsAccountIdGetResponse = GetAccountApiV1AccountsAccountIdGetResponses[keyof GetAccountApiV1AccountsAccountIdGetResponses];

export type UpdateAccountApiV1AccountsAccountIdPutData = {
    body: AccountUpdate;
    path: {
        /**
         * Account Id
         */
        account_id: string;
    };
    query?: never;
    url: '/api/v1/accounts/{account_id}';
};

export type UpdateAccountApiV1AccountsAccountIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateAccountApiV1AccountsAccountIdPutError = UpdateAccountApiV1AccountsAccountIdPutErrors[keyof UpdateAccountApiV1AccountsAccountIdPutErrors];

export type UpdateAccountApiV1AccountsAccountIdPutResponses = {
    /**
     * Successful Response
     */
    200: Account;
};

export type UpdateAccountApiV1AccountsAccountIdPutResponse = UpdateAccountApiV1AccountsAccountIdPutResponses[keyof UpdateAccountApiV1AccountsAccountIdPutResponses];

export type GetActiveAccountsApiV1AccountsActiveListGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/accounts/active/list';
};

export type GetActiveAccountsApiV1AccountsActiveListGetResponses = {
    /**
     * Response Get Active Accounts Api V1 Accounts Active List Get
     * Successful Response
     */
    200: Array<Account>;
};

export type GetActiveAccountsApiV1AccountsActiveListGetResponse = GetActiveAccountsApiV1AccountsActiveListGetResponses[keyof GetActiveAccountsApiV1AccountsActiveListGetResponses];

export type ActivateAccountApiV1AccountsAccountIdActivatePatchData = {
    body?: never;
    path: {
        /**
         * Account Id
         */
        account_id: string;
    };
    query?: never;
    url: '/api/v1/accounts/{account_id}/activate';
};

export type ActivateAccountApiV1AccountsAccountIdActivatePatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ActivateAccountApiV1AccountsAccountIdActivatePatchError = ActivateAccountApiV1AccountsAccountIdActivatePatchErrors[keyof ActivateAccountApiV1AccountsAccountIdActivatePatchErrors];

export type ActivateAccountApiV1AccountsAccountIdActivatePatchResponses = {
    /**
     * Successful Response
     */
    200: Account;
};

export type ActivateAccountApiV1AccountsAccountIdActivatePatchResponse = ActivateAccountApiV1AccountsAccountIdActivatePatchResponses[keyof ActivateAccountApiV1AccountsAccountIdActivatePatchResponses];

export type DeactivateAccountApiV1AccountsAccountIdDeactivatePatchData = {
    body?: never;
    path: {
        /**
         * Account Id
         */
        account_id: string;
    };
    query?: never;
    url: '/api/v1/accounts/{account_id}/deactivate';
};

export type DeactivateAccountApiV1AccountsAccountIdDeactivatePatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeactivateAccountApiV1AccountsAccountIdDeactivatePatchError = DeactivateAccountApiV1AccountsAccountIdDeactivatePatchErrors[keyof DeactivateAccountApiV1AccountsAccountIdDeactivatePatchErrors];

export type DeactivateAccountApiV1AccountsAccountIdDeactivatePatchResponses = {
    /**
     * Successful Response
     */
    200: Account;
};

export type DeactivateAccountApiV1AccountsAccountIdDeactivatePatchResponse = DeactivateAccountApiV1AccountsAccountIdDeactivatePatchResponses[keyof DeactivateAccountApiV1AccountsAccountIdDeactivatePatchResponses];

export type GetAllUsersApiV1UsersGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Skip
         */
        skip?: number;
        /**
         * Limit
         */
        limit?: number;
    };
    url: '/api/v1/users/';
};

export type GetAllUsersApiV1UsersGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllUsersApiV1UsersGetError = GetAllUsersApiV1UsersGetErrors[keyof GetAllUsersApiV1UsersGetErrors];

export type GetAllUsersApiV1UsersGetResponses = {
    /**
     * Response Get All Users Api V1 Users  Get
     * Successful Response
     */
    200: Array<User>;
};

export type GetAllUsersApiV1UsersGetResponse = GetAllUsersApiV1UsersGetResponses[keyof GetAllUsersApiV1UsersGetResponses];

export type CreateUserApiV1UsersPostData = {
    /**
     * User Data
     */
    body: {
        [key: string]: unknown;
    };
    path?: never;
    query?: never;
    url: '/api/v1/users/';
};

export type CreateUserApiV1UsersPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateUserApiV1UsersPostError = CreateUserApiV1UsersPostErrors[keyof CreateUserApiV1UsersPostErrors];

export type CreateUserApiV1UsersPostResponses = {
    /**
     * Response Create User Api V1 Users  Post
     * Successful Response
     */
    201: {
        [key: string]: unknown;
    };
};

export type CreateUserApiV1UsersPostResponse = CreateUserApiV1UsersPostResponses[keyof CreateUserApiV1UsersPostResponses];

export type DeleteUserApiV1UsersUserIdDeleteData = {
    body?: never;
    path: {
        /**
         * User Id
         */
        user_id: string;
    };
    query?: never;
    url: '/api/v1/users/{user_id}';
};

export type DeleteUserApiV1UsersUserIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteUserApiV1UsersUserIdDeleteError = DeleteUserApiV1UsersUserIdDeleteErrors[keyof DeleteUserApiV1UsersUserIdDeleteErrors];

export type DeleteUserApiV1UsersUserIdDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type DeleteUserApiV1UsersUserIdDeleteResponse = DeleteUserApiV1UsersUserIdDeleteResponses[keyof DeleteUserApiV1UsersUserIdDeleteResponses];

export type GetUserApiV1UsersUserIdGetData = {
    body?: never;
    path: {
        /**
         * User Id
         */
        user_id: string;
    };
    query?: never;
    url: '/api/v1/users/{user_id}';
};

export type GetUserApiV1UsersUserIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetUserApiV1UsersUserIdGetError = GetUserApiV1UsersUserIdGetErrors[keyof GetUserApiV1UsersUserIdGetErrors];

export type GetUserApiV1UsersUserIdGetResponses = {
    /**
     * Successful Response
     */
    200: User;
};

export type GetUserApiV1UsersUserIdGetResponse = GetUserApiV1UsersUserIdGetResponses[keyof GetUserApiV1UsersUserIdGetResponses];

export type UpdateUserApiV1UsersUserIdPutData = {
    body: UserUpdate;
    path: {
        /**
         * User Id
         */
        user_id: string;
    };
    query?: never;
    url: '/api/v1/users/{user_id}';
};

export type UpdateUserApiV1UsersUserIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateUserApiV1UsersUserIdPutError = UpdateUserApiV1UsersUserIdPutErrors[keyof UpdateUserApiV1UsersUserIdPutErrors];

export type UpdateUserApiV1UsersUserIdPutResponses = {
    /**
     * Successful Response
     */
    200: User;
};

export type UpdateUserApiV1UsersUserIdPutResponse = UpdateUserApiV1UsersUserIdPutResponses[keyof UpdateUserApiV1UsersUserIdPutResponses];

export type GetUsersByAccountApiV1UsersAccountAccountIdGetData = {
    body?: never;
    path: {
        /**
         * Account Id
         */
        account_id: string;
    };
    query?: never;
    url: '/api/v1/users/account/{account_id}';
};

export type GetUsersByAccountApiV1UsersAccountAccountIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetUsersByAccountApiV1UsersAccountAccountIdGetError = GetUsersByAccountApiV1UsersAccountAccountIdGetErrors[keyof GetUsersByAccountApiV1UsersAccountAccountIdGetErrors];

export type GetUsersByAccountApiV1UsersAccountAccountIdGetResponses = {
    /**
     * Response Get Users By Account Api V1 Users Account  Account Id  Get
     * Successful Response
     */
    200: Array<User>;
};

export type GetUsersByAccountApiV1UsersAccountAccountIdGetResponse = GetUsersByAccountApiV1UsersAccountAccountIdGetResponses[keyof GetUsersByAccountApiV1UsersAccountAccountIdGetResponses];

export type AuthenticateUserApiV1UsersAuthenticatePostData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Email
         */
        email: string;
        /**
         * Password
         */
        password: string;
    };
    url: '/api/v1/users/authenticate';
};

export type AuthenticateUserApiV1UsersAuthenticatePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AuthenticateUserApiV1UsersAuthenticatePostError = AuthenticateUserApiV1UsersAuthenticatePostErrors[keyof AuthenticateUserApiV1UsersAuthenticatePostErrors];

export type AuthenticateUserApiV1UsersAuthenticatePostResponses = {
    /**
     * Successful Response
     */
    200: User;
};

export type AuthenticateUserApiV1UsersAuthenticatePostResponse = AuthenticateUserApiV1UsersAuthenticatePostResponses[keyof AuthenticateUserApiV1UsersAuthenticatePostResponses];

export type ActivateUserApiV1UsersUserIdActivatePatchData = {
    body?: never;
    path: {
        /**
         * User Id
         */
        user_id: string;
    };
    query?: never;
    url: '/api/v1/users/{user_id}/activate';
};

export type ActivateUserApiV1UsersUserIdActivatePatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ActivateUserApiV1UsersUserIdActivatePatchError = ActivateUserApiV1UsersUserIdActivatePatchErrors[keyof ActivateUserApiV1UsersUserIdActivatePatchErrors];

export type ActivateUserApiV1UsersUserIdActivatePatchResponses = {
    /**
     * Successful Response
     */
    200: User;
};

export type ActivateUserApiV1UsersUserIdActivatePatchResponse = ActivateUserApiV1UsersUserIdActivatePatchResponses[keyof ActivateUserApiV1UsersUserIdActivatePatchResponses];

export type DeactivateUserApiV1UsersUserIdDeactivatePatchData = {
    body?: never;
    path: {
        /**
         * User Id
         */
        user_id: string;
    };
    query?: never;
    url: '/api/v1/users/{user_id}/deactivate';
};

export type DeactivateUserApiV1UsersUserIdDeactivatePatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeactivateUserApiV1UsersUserIdDeactivatePatchError = DeactivateUserApiV1UsersUserIdDeactivatePatchErrors[keyof DeactivateUserApiV1UsersUserIdDeactivatePatchErrors];

export type DeactivateUserApiV1UsersUserIdDeactivatePatchResponses = {
    /**
     * Successful Response
     */
    200: User;
};

export type DeactivateUserApiV1UsersUserIdDeactivatePatchResponse = DeactivateUserApiV1UsersUserIdDeactivatePatchResponses[keyof DeactivateUserApiV1UsersUserIdDeactivatePatchResponses];

export type GetAllSchedulersApiV1SchedulerGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/scheduler/';
};

export type GetAllSchedulersApiV1SchedulerGetResponses = {
    /**
     * Response Get All Schedulers Api V1 Scheduler  Get
     * Successful Response
     */
    200: Array<Scheduler>;
};

export type GetAllSchedulersApiV1SchedulerGetResponse = GetAllSchedulersApiV1SchedulerGetResponses[keyof GetAllSchedulersApiV1SchedulerGetResponses];

export type CreateSchedulerApiV1SchedulerPostData = {
    body: SchedulerCreate;
    path?: never;
    query?: never;
    url: '/api/v1/scheduler/';
};

export type CreateSchedulerApiV1SchedulerPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateSchedulerApiV1SchedulerPostError = CreateSchedulerApiV1SchedulerPostErrors[keyof CreateSchedulerApiV1SchedulerPostErrors];

export type CreateSchedulerApiV1SchedulerPostResponses = {
    /**
     * Response Create Scheduler Api V1 Scheduler  Post
     * Successful Response
     */
    200: string;
};

export type CreateSchedulerApiV1SchedulerPostResponse = CreateSchedulerApiV1SchedulerPostResponses[keyof CreateSchedulerApiV1SchedulerPostResponses];

export type DeleteSchedulerApiV1SchedulerSchedulerIdDeleteData = {
    body?: never;
    path: {
        /**
         * Scheduler Id
         */
        scheduler_id: string;
    };
    query?: never;
    url: '/api/v1/scheduler/{scheduler_id}';
};

export type DeleteSchedulerApiV1SchedulerSchedulerIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteSchedulerApiV1SchedulerSchedulerIdDeleteError = DeleteSchedulerApiV1SchedulerSchedulerIdDeleteErrors[keyof DeleteSchedulerApiV1SchedulerSchedulerIdDeleteErrors];

export type DeleteSchedulerApiV1SchedulerSchedulerIdDeleteResponses = {
    /**
     * Response Delete Scheduler Api V1 Scheduler  Scheduler Id  Delete
     * Successful Response
     */
    200: boolean;
};

export type DeleteSchedulerApiV1SchedulerSchedulerIdDeleteResponse = DeleteSchedulerApiV1SchedulerSchedulerIdDeleteResponses[keyof DeleteSchedulerApiV1SchedulerSchedulerIdDeleteResponses];

export type GetSchedulerByIdApiV1SchedulerSchedulerIdGetData = {
    body?: never;
    path: {
        /**
         * Scheduler Id
         */
        scheduler_id: string;
    };
    query?: never;
    url: '/api/v1/scheduler/{scheduler_id}';
};

export type GetSchedulerByIdApiV1SchedulerSchedulerIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetSchedulerByIdApiV1SchedulerSchedulerIdGetError = GetSchedulerByIdApiV1SchedulerSchedulerIdGetErrors[keyof GetSchedulerByIdApiV1SchedulerSchedulerIdGetErrors];

export type GetSchedulerByIdApiV1SchedulerSchedulerIdGetResponses = {
    /**
     * Successful Response
     */
    200: Scheduler;
};

export type GetSchedulerByIdApiV1SchedulerSchedulerIdGetResponse = GetSchedulerByIdApiV1SchedulerSchedulerIdGetResponses[keyof GetSchedulerByIdApiV1SchedulerSchedulerIdGetResponses];

export type UpdateSchedulerApiV1SchedulerSchedulerIdPutData = {
    body: SchedulerUpdate;
    path: {
        /**
         * Scheduler Id
         */
        scheduler_id: string;
    };
    query?: never;
    url: '/api/v1/scheduler/{scheduler_id}';
};

export type UpdateSchedulerApiV1SchedulerSchedulerIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateSchedulerApiV1SchedulerSchedulerIdPutError = UpdateSchedulerApiV1SchedulerSchedulerIdPutErrors[keyof UpdateSchedulerApiV1SchedulerSchedulerIdPutErrors];

export type UpdateSchedulerApiV1SchedulerSchedulerIdPutResponses = {
    /**
     * Response Update Scheduler Api V1 Scheduler  Scheduler Id  Put
     * Successful Response
     */
    200: boolean;
};

export type UpdateSchedulerApiV1SchedulerSchedulerIdPutResponse = UpdateSchedulerApiV1SchedulerSchedulerIdPutResponses[keyof UpdateSchedulerApiV1SchedulerSchedulerIdPutResponses];

export type GetSchedulersByAccountIdApiV1SchedulerAccountAccountIdGetData = {
    body?: never;
    path: {
        /**
         * Account Id
         */
        account_id: string;
    };
    query?: never;
    url: '/api/v1/scheduler/account/{account_id}';
};

export type GetSchedulersByAccountIdApiV1SchedulerAccountAccountIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetSchedulersByAccountIdApiV1SchedulerAccountAccountIdGetError = GetSchedulersByAccountIdApiV1SchedulerAccountAccountIdGetErrors[keyof GetSchedulersByAccountIdApiV1SchedulerAccountAccountIdGetErrors];

export type GetSchedulersByAccountIdApiV1SchedulerAccountAccountIdGetResponses = {
    /**
     * Response Get Schedulers By Account Id Api V1 Scheduler Account  Account Id  Get
     * Successful Response
     */
    200: Array<Scheduler>;
};

export type GetSchedulersByAccountIdApiV1SchedulerAccountAccountIdGetResponse = GetSchedulersByAccountIdApiV1SchedulerAccountAccountIdGetResponses[keyof GetSchedulersByAccountIdApiV1SchedulerAccountAccountIdGetResponses];

export type GetAllNumbersApiV1NumberGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/number/';
};

export type GetAllNumbersApiV1NumberGetResponses = {
    /**
     * Response Get All Numbers Api V1 Number  Get
     * Successful Response
     */
    200: Array<Number>;
};

export type GetAllNumbersApiV1NumberGetResponse = GetAllNumbersApiV1NumberGetResponses[keyof GetAllNumbersApiV1NumberGetResponses];

export type CreateNumberApiV1NumberPostData = {
    body: NumberCreate;
    path?: never;
    query?: never;
    url: '/api/v1/number/';
};

export type CreateNumberApiV1NumberPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateNumberApiV1NumberPostError = CreateNumberApiV1NumberPostErrors[keyof CreateNumberApiV1NumberPostErrors];

export type CreateNumberApiV1NumberPostResponses = {
    /**
     * Response Create Number Api V1 Number  Post
     * Successful Response
     */
    200: string;
};

export type CreateNumberApiV1NumberPostResponse = CreateNumberApiV1NumberPostResponses[keyof CreateNumberApiV1NumberPostResponses];

export type DeleteNumberApiV1NumberNumberIdDeleteData = {
    body?: never;
    path: {
        /**
         * Number Id
         */
        number_id: string;
    };
    query?: never;
    url: '/api/v1/number/{number_id}';
};

export type DeleteNumberApiV1NumberNumberIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteNumberApiV1NumberNumberIdDeleteError = DeleteNumberApiV1NumberNumberIdDeleteErrors[keyof DeleteNumberApiV1NumberNumberIdDeleteErrors];

export type DeleteNumberApiV1NumberNumberIdDeleteResponses = {
    /**
     * Response Delete Number Api V1 Number  Number Id  Delete
     * Successful Response
     */
    200: boolean;
};

export type DeleteNumberApiV1NumberNumberIdDeleteResponse = DeleteNumberApiV1NumberNumberIdDeleteResponses[keyof DeleteNumberApiV1NumberNumberIdDeleteResponses];

export type GetNumberByIdApiV1NumberNumberIdGetData = {
    body?: never;
    path: {
        /**
         * Number Id
         */
        number_id: string;
    };
    query?: never;
    url: '/api/v1/number/{number_id}';
};

export type GetNumberByIdApiV1NumberNumberIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetNumberByIdApiV1NumberNumberIdGetError = GetNumberByIdApiV1NumberNumberIdGetErrors[keyof GetNumberByIdApiV1NumberNumberIdGetErrors];

export type GetNumberByIdApiV1NumberNumberIdGetResponses = {
    /**
     * Successful Response
     */
    200: Number;
};

export type GetNumberByIdApiV1NumberNumberIdGetResponse = GetNumberByIdApiV1NumberNumberIdGetResponses[keyof GetNumberByIdApiV1NumberNumberIdGetResponses];

export type UpdateNumberApiV1NumberNumberIdPutData = {
    body: NumberUpdate;
    path: {
        /**
         * Number Id
         */
        number_id: string;
    };
    query?: never;
    url: '/api/v1/number/{number_id}';
};

export type UpdateNumberApiV1NumberNumberIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateNumberApiV1NumberNumberIdPutError = UpdateNumberApiV1NumberNumberIdPutErrors[keyof UpdateNumberApiV1NumberNumberIdPutErrors];

export type UpdateNumberApiV1NumberNumberIdPutResponses = {
    /**
     * Response Update Number Api V1 Number  Number Id  Put
     * Successful Response
     */
    200: boolean;
};

export type UpdateNumberApiV1NumberNumberIdPutResponse = UpdateNumberApiV1NumberNumberIdPutResponses[keyof UpdateNumberApiV1NumberNumberIdPutResponses];

export type GetNumberByValueApiV1NumberValueValueGetData = {
    body?: never;
    path: {
        /**
         * Value
         */
        value: string;
    };
    query?: never;
    url: '/api/v1/number/value/{value}';
};

export type GetNumberByValueApiV1NumberValueValueGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetNumberByValueApiV1NumberValueValueGetError = GetNumberByValueApiV1NumberValueValueGetErrors[keyof GetNumberByValueApiV1NumberValueValueGetErrors];

export type GetNumberByValueApiV1NumberValueValueGetResponses = {
    /**
     * Successful Response
     */
    200: Number;
};

export type GetNumberByValueApiV1NumberValueValueGetResponse = GetNumberByValueApiV1NumberValueValueGetResponses[keyof GetNumberByValueApiV1NumberValueValueGetResponses];

export type GetNumbersByAccountIdApiV1NumberAccountAccountIdGetData = {
    body?: never;
    path: {
        /**
         * Account Id
         */
        account_id: string;
    };
    query?: never;
    url: '/api/v1/number/account/{account_id}';
};

export type GetNumbersByAccountIdApiV1NumberAccountAccountIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetNumbersByAccountIdApiV1NumberAccountAccountIdGetError = GetNumbersByAccountIdApiV1NumberAccountAccountIdGetErrors[keyof GetNumbersByAccountIdApiV1NumberAccountAccountIdGetErrors];

export type GetNumbersByAccountIdApiV1NumberAccountAccountIdGetResponses = {
    /**
     * Response Get Numbers By Account Id Api V1 Number Account  Account Id  Get
     * Successful Response
     */
    200: Array<Number>;
};

export type GetNumbersByAccountIdApiV1NumberAccountAccountIdGetResponse = GetNumbersByAccountIdApiV1NumberAccountAccountIdGetResponses[keyof GetNumbersByAccountIdApiV1NumberAccountAccountIdGetResponses];

export type GetAllCarriersApiV1CarrierGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/carrier/';
};

export type GetAllCarriersApiV1CarrierGetResponses = {
    /**
     * Response Get All Carriers Api V1 Carrier  Get
     * Successful Response
     */
    200: Array<Carrier>;
};

export type GetAllCarriersApiV1CarrierGetResponse = GetAllCarriersApiV1CarrierGetResponses[keyof GetAllCarriersApiV1CarrierGetResponses];

export type CreateCarrierApiV1CarrierPostData = {
    body: CarrierCreate;
    path?: never;
    query?: never;
    url: '/api/v1/carrier/';
};

export type CreateCarrierApiV1CarrierPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateCarrierApiV1CarrierPostError = CreateCarrierApiV1CarrierPostErrors[keyof CreateCarrierApiV1CarrierPostErrors];

export type CreateCarrierApiV1CarrierPostResponses = {
    /**
     * Response Create Carrier Api V1 Carrier  Post
     * Successful Response
     */
    200: string;
};

export type CreateCarrierApiV1CarrierPostResponse = CreateCarrierApiV1CarrierPostResponses[keyof CreateCarrierApiV1CarrierPostResponses];

export type DeleteCarrierApiV1CarrierCarrierIdDeleteData = {
    body?: never;
    path: {
        /**
         * Carrier Id
         */
        carrier_id: string;
    };
    query?: never;
    url: '/api/v1/carrier/{carrier_id}';
};

export type DeleteCarrierApiV1CarrierCarrierIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteCarrierApiV1CarrierCarrierIdDeleteError = DeleteCarrierApiV1CarrierCarrierIdDeleteErrors[keyof DeleteCarrierApiV1CarrierCarrierIdDeleteErrors];

export type DeleteCarrierApiV1CarrierCarrierIdDeleteResponses = {
    /**
     * Response Delete Carrier Api V1 Carrier  Carrier Id  Delete
     * Successful Response
     */
    200: boolean;
};

export type DeleteCarrierApiV1CarrierCarrierIdDeleteResponse = DeleteCarrierApiV1CarrierCarrierIdDeleteResponses[keyof DeleteCarrierApiV1CarrierCarrierIdDeleteResponses];

export type GetCarrierByIdApiV1CarrierCarrierIdGetData = {
    body?: never;
    path: {
        /**
         * Carrier Id
         */
        carrier_id: string;
    };
    query?: never;
    url: '/api/v1/carrier/{carrier_id}';
};

export type GetCarrierByIdApiV1CarrierCarrierIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetCarrierByIdApiV1CarrierCarrierIdGetError = GetCarrierByIdApiV1CarrierCarrierIdGetErrors[keyof GetCarrierByIdApiV1CarrierCarrierIdGetErrors];

export type GetCarrierByIdApiV1CarrierCarrierIdGetResponses = {
    /**
     * Successful Response
     */
    200: Carrier;
};

export type GetCarrierByIdApiV1CarrierCarrierIdGetResponse = GetCarrierByIdApiV1CarrierCarrierIdGetResponses[keyof GetCarrierByIdApiV1CarrierCarrierIdGetResponses];

export type UpdateCarrierApiV1CarrierCarrierIdPutData = {
    body: CarrierUpdate;
    path: {
        /**
         * Carrier Id
         */
        carrier_id: string;
    };
    query?: never;
    url: '/api/v1/carrier/{carrier_id}';
};

export type UpdateCarrierApiV1CarrierCarrierIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateCarrierApiV1CarrierCarrierIdPutError = UpdateCarrierApiV1CarrierCarrierIdPutErrors[keyof UpdateCarrierApiV1CarrierCarrierIdPutErrors];

export type UpdateCarrierApiV1CarrierCarrierIdPutResponses = {
    /**
     * Response Update Carrier Api V1 Carrier  Carrier Id  Put
     * Successful Response
     */
    200: boolean;
};

export type UpdateCarrierApiV1CarrierCarrierIdPutResponse = UpdateCarrierApiV1CarrierCarrierIdPutResponses[keyof UpdateCarrierApiV1CarrierCarrierIdPutResponses];

export type GetCarrierByNameApiV1CarrierNameNameGetData = {
    body?: never;
    path: {
        /**
         * Name
         */
        name: string;
    };
    query?: never;
    url: '/api/v1/carrier/name/{name}';
};

export type GetCarrierByNameApiV1CarrierNameNameGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetCarrierByNameApiV1CarrierNameNameGetError = GetCarrierByNameApiV1CarrierNameNameGetErrors[keyof GetCarrierByNameApiV1CarrierNameNameGetErrors];

export type GetCarrierByNameApiV1CarrierNameNameGetResponses = {
    /**
     * Successful Response
     */
    200: Carrier;
};

export type GetCarrierByNameApiV1CarrierNameNameGetResponse = GetCarrierByNameApiV1CarrierNameNameGetResponses[keyof GetCarrierByNameApiV1CarrierNameNameGetResponses];

export type GetAllServersApiV1ServerGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/server/';
};

export type GetAllServersApiV1ServerGetResponses = {
    /**
     * Response Get All Servers Api V1 Server  Get
     * Successful Response
     */
    200: Array<Server>;
};

export type GetAllServersApiV1ServerGetResponse = GetAllServersApiV1ServerGetResponses[keyof GetAllServersApiV1ServerGetResponses];

export type CreateServerApiV1ServerPostData = {
    body: ServerCreate;
    path?: never;
    query?: never;
    url: '/api/v1/server/';
};

export type CreateServerApiV1ServerPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateServerApiV1ServerPostError = CreateServerApiV1ServerPostErrors[keyof CreateServerApiV1ServerPostErrors];

export type CreateServerApiV1ServerPostResponses = {
    /**
     * Response Create Server Api V1 Server  Post
     * Successful Response
     */
    200: string;
};

export type CreateServerApiV1ServerPostResponse = CreateServerApiV1ServerPostResponses[keyof CreateServerApiV1ServerPostResponses];

export type DeleteServerApiV1ServerIdDeleteData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: string;
    };
    query?: never;
    url: '/api/v1/server/{id}';
};

export type DeleteServerApiV1ServerIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteServerApiV1ServerIdDeleteError = DeleteServerApiV1ServerIdDeleteErrors[keyof DeleteServerApiV1ServerIdDeleteErrors];

export type DeleteServerApiV1ServerIdDeleteResponses = {
    /**
     * Response Delete Server Api V1 Server  Id  Delete
     * Successful Response
     */
    200: boolean;
};

export type DeleteServerApiV1ServerIdDeleteResponse = DeleteServerApiV1ServerIdDeleteResponses[keyof DeleteServerApiV1ServerIdDeleteResponses];

export type GetServerByIdApiV1ServerIdGetData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: string;
    };
    query?: never;
    url: '/api/v1/server/{id}';
};

export type GetServerByIdApiV1ServerIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetServerByIdApiV1ServerIdGetError = GetServerByIdApiV1ServerIdGetErrors[keyof GetServerByIdApiV1ServerIdGetErrors];

export type GetServerByIdApiV1ServerIdGetResponses = {
    /**
     * Successful Response
     */
    200: Server;
};

export type GetServerByIdApiV1ServerIdGetResponse = GetServerByIdApiV1ServerIdGetResponses[keyof GetServerByIdApiV1ServerIdGetResponses];

export type UpdateServerApiV1ServerIdPutData = {
    body: ServerUpdate;
    path: {
        /**
         * Id
         */
        id: string;
    };
    query?: never;
    url: '/api/v1/server/{id}';
};

export type UpdateServerApiV1ServerIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateServerApiV1ServerIdPutError = UpdateServerApiV1ServerIdPutErrors[keyof UpdateServerApiV1ServerIdPutErrors];

export type UpdateServerApiV1ServerIdPutResponses = {
    /**
     * Response Update Server Api V1 Server  Id  Put
     * Successful Response
     */
    200: boolean;
};

export type UpdateServerApiV1ServerIdPutResponse = UpdateServerApiV1ServerIdPutResponses[keyof UpdateServerApiV1ServerIdPutResponses];

export type HealthCheckHealthGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/health';
};

export type HealthCheckHealthGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type CustomOpenapiOpenapiJsonGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/openapi.json';
};

export type CustomOpenapiOpenapiJsonGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ClientOptions = {
    baseURL: `${string}://openapi.json` | (string & {});
};